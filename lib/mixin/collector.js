// Generated by CoffeeScript 1.4.0

/*
This is Collector mixin - its create layout for object walker and result collection
*/


(function() {
  var getItType, instanceProperties, _, _ref;

  _ = (_ref = this._) != null ? _ref : require('lodash');

  getItType = require("../lib/type_detector").getItType;

  module.exports = instanceProperties = {
    /*
      This method create 'emit' function for data collection
    */

    _buildEmitCollector: function(result_obj) {
      var _this = this;
      return function(key, value) {
        var _ref1;
        if ((key != null) && (value != null)) {
          if ((_ref1 = result_obj[key]) == null) {
            result_obj[key] = [];
          }
          result_obj[key].push(value);
          return null;
        }
      };
    },
    /*
      This method create collector layout for any worker
    */

    _buildCollectorLayout: function(work_fn) {
      var _this = this;
      return function(in_obj) {
        var arg_type, emit, item, key, rake_result, _i, _j, _len, _len1, _ref1;
        rake_result = {};
        emit = _this._buildEmitCollector(rake_result);
        switch (arg_type = getItType(in_obj)) {
          case 'ARRAY':
            for (_i = 0, _len = in_obj.length; _i < _len; _i++) {
              item = in_obj[_i];
              work_fn.call(_this, item, emit);
            }
            break;
          case 'HASH':
            _ref1 = _.keys(in_obj);
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              key = _ref1[_j];
              work_fn.call(_this, key, in_obj[key], emit);
            }
            break;
          default:
            throw Error("cant work with object type |" + arg_type + "|");
        }
        return rake_result;
      };
    }
  };

}).call(this);
